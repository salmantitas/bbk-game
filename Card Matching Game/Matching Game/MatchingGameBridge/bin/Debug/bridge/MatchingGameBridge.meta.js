Bridge.assembly("MatchingGameBridge", function ($asm, globals) {
    "use strict";


    var $m = Bridge.setMetadata,
        $n = ["BC_Functions","System","MatchingGameFrameworks"];
    $m("BC_Functions.Position2D", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[0].Position2D],"pi":[{"n":"position","pt":$n[0].Position2D,"ps":0}],"sn":"$ctor1"},{"a":2,"n":".ctor","t":1,"p":[$n[1].Int32],"pi":[{"n":"position","pt":$n[1].Int32,"ps":0}],"sn":"$ctor2"},{"a":2,"n":".ctor","t":1,"p":[$n[1].Int32,$n[1].Int32],"pi":[{"n":"x","pt":$n[1].Int32,"ps":0},{"n":"y","pt":$n[1].Int32,"ps":1}],"sn":"$ctor3"},{"v":true,"a":2,"n":"SetPosition","t":8,"pi":[{"n":"position","pt":$n[0].Position2D,"ps":0}],"sn":"SetPosition","rt":$n[1].Void,"p":[$n[0].Position2D]},{"v":true,"a":2,"n":"SetPosition","t":8,"pi":[{"n":"position","pt":$n[1].Int32,"ps":0}],"sn":"SetPosition$1","rt":$n[1].Void,"p":[$n[1].Int32]},{"v":true,"a":2,"n":"SetPosition","t":8,"pi":[{"n":"x","pt":$n[1].Int32,"ps":0},{"n":"y","pt":$n[1].Int32,"ps":1}],"sn":"SetPosition$2","rt":$n[1].Void,"p":[$n[1].Int32,$n[1].Int32]},{"ov":true,"a":2,"n":"ToString","t":8,"sn":"toString","rt":$n[1].String},{"a":2,"n":"op_Addition","is":true,"t":8,"pi":[{"n":"a","pt":$n[0].Position2D,"ps":0},{"n":"b","pt":$n[0].Position2D,"ps":1}],"sn":"op_Addition","rt":$n[0].Position2D,"p":[$n[0].Position2D,$n[0].Position2D]},{"a":2,"n":"op_Multiply","is":true,"t":8,"pi":[{"n":"pos","pt":$n[0].Position2D,"ps":0},{"n":"value","pt":$n[1].Int32,"ps":1}],"sn":"op_Multiply","rt":$n[0].Position2D,"p":[$n[0].Position2D,$n[1].Int32]},{"a":2,"n":"op_Subtraction","is":true,"t":8,"pi":[{"n":"a","pt":$n[0].Position2D,"ps":0},{"n":"b","pt":$n[0].Position2D,"ps":1}],"sn":"op_Subtraction","rt":$n[0].Position2D,"p":[$n[0].Position2D,$n[0].Position2D]},{"v":true,"a":2,"n":"Area","t":16,"rt":$n[1].Int32,"g":{"v":true,"a":2,"n":"get_Area","t":8,"rt":$n[1].Int32,"fg":"Area","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"Area"},{"a":2,"n":"X","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_X","t":8,"rt":$n[1].Int32,"fg":"X","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_X","t":8,"p":[$n[1].Int32],"rt":$n[1].Void,"fs":"X"},"fn":"X"},{"a":2,"n":"Y","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_Y","t":8,"rt":$n[1].Int32,"fg":"Y","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_Y","t":8,"p":[$n[1].Int32],"rt":$n[1].Void,"fs":"Y"},"fn":"Y"},{"a":1,"n":"x","t":4,"rt":$n[1].Int32,"sn":"x","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"y","t":4,"rt":$n[1].Int32,"sn":"y","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("MatchingGameFrameworks.Card", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[1].Int32,$n[1].String],"pi":[{"n":"id","pt":$n[1].Int32,"ps":0},{"n":"imageLocation","pt":$n[1].String,"ps":1}],"sn":"$ctor1"},{"a":2,"n":"Flip","t":8,"sn":"Flip","rt":$n[1].Void},{"a":2,"n":"IsMatch","t":8,"pi":[{"n":"otherCard","pt":$n[2].Card,"ps":0},{"n":"throwCompareToSelfException","dv":true,"o":true,"pt":$n[1].Boolean,"ps":1}],"sn":"IsMatch","rt":$n[1].Boolean,"p":[$n[2].Card,$n[1].Boolean],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Remove","t":8,"sn":"Remove","rt":$n[1].Void},{"a":2,"n":"Reset","t":8,"sn":"Reset","rt":$n[1].Void},{"a":2,"n":"Flipped","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_Flipped","t":8,"rt":$n[1].Boolean,"fg":"Flipped","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_Flipped","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"Flipped"},"fn":"Flipped"},{"a":2,"n":"ID","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_ID","t":8,"rt":$n[1].Int32,"fg":"ID","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_ID","t":8,"p":[$n[1].Int32],"rt":$n[1].Void,"fs":"ID"},"fn":"ID"},{"a":2,"n":"ImageLocation","t":16,"rt":$n[1].String,"g":{"a":2,"n":"get_ImageLocation","t":8,"rt":$n[1].String,"fg":"ImageLocation"},"s":{"a":2,"n":"set_ImageLocation","t":8,"p":[$n[1].String],"rt":$n[1].Void,"fs":"ImageLocation"},"fn":"ImageLocation"},{"a":2,"n":"Removed","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_Removed","t":8,"rt":$n[1].Boolean,"fg":"Removed","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"s":{"a":2,"n":"set_Removed","t":8,"p":[$n[1].Boolean],"rt":$n[1].Void,"fs":"Removed"},"fn":"Removed"},{"a":1,"n":"flipped","t":4,"rt":$n[1].Boolean,"sn":"flipped","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"id","t":4,"rt":$n[1].Int32,"sn":"id","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"imageLocation","t":4,"rt":$n[1].String,"sn":"imageLocation"},{"a":1,"n":"removed","t":4,"rt":$n[1].Boolean,"sn":"removed","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}}]}; }, $n);
    $m("MatchingGameFrameworks.Game", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[1].Int32,$n[1].Int32],"pi":[{"n":"columnsCount","pt":$n[1].Int32,"ps":0},{"n":"rowCount","pt":$n[1].Int32,"ps":1}],"sn":"ctor"},{"a":2,"n":"GetImage","t":8,"pi":[{"n":"column","pt":$n[1].Int32,"ps":0},{"n":"row","pt":$n[1].Int32,"ps":1}],"sn":"GetImage","rt":$n[1].String,"p":[$n[1].Int32,$n[1].Int32]},{"a":2,"n":"HideAllCards","t":8,"sn":"HideAllCards","rt":$n[1].Void},{"a":2,"n":"RemoveFlipedCards","t":8,"sn":"RemoveFlipedCards","rt":$n[1].Void},{"a":2,"n":"ResetGame","t":8,"sn":"ResetGame","rt":$n[1].Void},{"a":2,"n":"Shuffle","t":8,"pi":[{"n":"numberOfShuffles","dv":1,"o":true,"pt":$n[1].Int32,"ps":0}],"sn":"Shuffle","rt":$n[1].Void,"p":[$n[1].Int32]},{"a":2,"n":"SwitchSpots","t":8,"pi":[{"n":"card1","ref":true,"pt":$n[2].Card,"ps":0},{"n":"card2","ref":true,"pt":$n[2].Card,"ps":1},{"n":"throwCompareToSelfException","dv":true,"o":true,"pt":$n[1].Boolean,"ps":2}],"sn":"SwitchSpots","rt":$n[1].Void,"p":[$n[2].Card,$n[2].Card,$n[1].Boolean]},{"a":2,"n":"BackOfCardImageLocation","t":16,"rt":$n[1].String,"g":{"a":2,"n":"get_BackOfCardImageLocation","t":8,"rt":$n[1].String,"fg":"BackOfCardImageLocation"},"s":{"a":2,"n":"set_BackOfCardImageLocation","t":8,"p":[$n[1].String],"rt":$n[1].Void,"fs":"BackOfCardImageLocation"},"fn":"BackOfCardImageLocation"},{"a":2,"n":"CardSize","t":16,"rt":$n[0].Position2D,"g":{"a":2,"n":"get_CardSize","t":8,"rt":$n[0].Position2D,"fg":"CardSize"},"s":{"a":2,"n":"set_CardSize","t":8,"p":[$n[0].Position2D],"rt":$n[1].Void,"fs":"CardSize"},"fn":"CardSize"},{"a":2,"n":"Cards","t":16,"rt":System.Array.type(MatchingGameFrameworks.Card, 2),"g":{"a":2,"n":"get_Cards","t":8,"rt":System.Array.type(MatchingGameFrameworks.Card, 2),"fg":"Cards"},"fn":"Cards"},{"a":2,"n":"CardsRemain","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_CardsRemain","t":8,"rt":$n[1].Int32,"fg":"CardsRemain","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"CardsRemain"},{"a":2,"n":"FlipedCardsCount","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_FlipedCardsCount","t":8,"rt":$n[1].Int32,"fg":"FlipedCardsCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"FlipedCardsCount"},{"a":2,"n":"FlipedCardsMatch","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_FlipedCardsMatch","t":8,"rt":$n[1].Boolean,"fg":"FlipedCardsMatch","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"FlipedCardsMatch"},{"a":2,"n":"GameComplete","t":16,"rt":$n[1].Boolean,"g":{"a":2,"n":"get_GameComplete","t":8,"rt":$n[1].Boolean,"fg":"GameComplete","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"GameComplete"},{"a":2,"n":"HiddenCardCount","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_HiddenCardCount","t":8,"rt":$n[1].Int32,"fg":"HiddenCardCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"HiddenCardCount"},{"a":2,"n":"RemovedCardsCount","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_RemovedCardsCount","t":8,"rt":$n[1].Int32,"fg":"RemovedCardsCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"RemovedCardsCount"},{"a":2,"n":"Test","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_Test","t":8,"rt":$n[1].Int32,"fg":"Test","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_Test","t":8,"p":[$n[1].Int32],"rt":$n[1].Void,"fs":"Test"},"fn":"Test"},{"a":2,"n":"TotalCardCount","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_TotalCardCount","t":8,"rt":$n[1].Int32,"fg":"TotalCardCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"TotalCardCount"},{"a":2,"n":"UniqueCardCount","t":16,"rt":$n[1].Int32,"g":{"a":2,"n":"get_UniqueCardCount","t":8,"rt":$n[1].Int32,"fg":"UniqueCardCount","box":function ($v) { return Bridge.box($v, System.Int32);}},"fn":"UniqueCardCount"},{"a":1,"n":"MINIMUM_CARD_IN_A_ROW","is":true,"t":4,"rt":$n[1].Int32,"sn":"MINIMUM_CARD_IN_A_ROW","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"backOfCardImageLocation","t":4,"rt":$n[1].String,"sn":"backOfCardImageLocation"},{"a":1,"n":"cardSize","t":4,"rt":$n[0].Position2D,"sn":"cardSize"},{"a":1,"n":"cards","t":4,"rt":System.Array.type(MatchingGameFrameworks.Card, 2),"sn":"cards"},{"a":1,"n":"test","t":4,"rt":$n[1].Int32,"sn":"test","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; }, $n);
    $m("MatchingGameBridge.App", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Main","is":true,"t":8,"sn":"Main","rt":$n[1].Void}]}; }, $n);
});
